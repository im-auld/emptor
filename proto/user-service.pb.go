// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user-service.proto

/*
Package userService is a generated protocol buffer package.

It is generated from these files:
	user-service.proto

It has these top-level messages:
	Error
	User
	GetUserRequest
	GetUserResponse
*/
package userService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_NOT_FOUND         ErrorCode = 0
	ErrorCode_BAD_REQUEST       ErrorCode = 1
	ErrorCode_SERVER_ERROR      ErrorCode = 2
	ErrorCode_NOT_AUTHENTICATED ErrorCode = 3
	ErrorCode_NOT_AUTHORIZED    ErrorCode = 4
)

var ErrorCode_name = map[int32]string{
	0: "NOT_FOUND",
	1: "BAD_REQUEST",
	2: "SERVER_ERROR",
	3: "NOT_AUTHENTICATED",
	4: "NOT_AUTHORIZED",
}
var ErrorCode_value = map[string]int32{
	"NOT_FOUND":         0,
	"BAD_REQUEST":       1,
	"SERVER_ERROR":      2,
	"NOT_AUTHENTICATED": 3,
	"NOT_AUTHORIZED":    4,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Error struct {
	ErrorCode ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,enum=userService.ErrorCode" json:"error_code,omitempty"`
	Message   string    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Error) GetErrorCode() ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return ErrorCode_NOT_FOUND
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type User struct {
	UserId      int64  `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	FirstName   string `protobuf:"bytes,2,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,3,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Email       string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	IsActive    bool   `protobuf:"varint,5,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	DateCreated int64  `protobuf:"varint,6,opt,name=date_created,json=dateCreated" json:"date_created,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *User) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *User) GetDateCreated() int64 {
	if m != nil {
		return m.DateCreated
	}
	return 0
}

type GetUserRequest struct {
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetUserRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetUserResponse struct {
	User  *User  `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Error *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *GetUserResponse) Reset()                    { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()               {}
func (*GetUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GetUserResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*Error)(nil), "userService.Error")
	proto.RegisterType((*User)(nil), "userService.User")
	proto.RegisterType((*GetUserRequest)(nil), "userService.GetUserRequest")
	proto.RegisterType((*GetUserResponse)(nil), "userService.GetUserResponse")
	proto.RegisterEnum("userService.ErrorCode", ErrorCode_name, ErrorCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := grpc.Invoke(ctx, "/userService.UserService/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userService.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userService.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _UserService_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user-service.proto",
}

func init() { proto.RegisterFile("user-service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 410 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x26, 0xeb, 0x6f, 0x4e, 0x46, 0x97, 0x1d, 0x01, 0x0b, 0x0c, 0xa4, 0x52, 0x09, 0xa9, 0x20,
	0xad, 0x17, 0x45, 0x3c, 0x40, 0xd7, 0x18, 0xe8, 0x4d, 0x2b, 0x9c, 0x04, 0x21, 0x6e, 0x2c, 0x2f,
	0x39, 0x80, 0xa5, 0x66, 0x19, 0x76, 0xba, 0xf7, 0xe2, 0x0d, 0x91, 0x1d, 0x32, 0x5a, 0xc1, 0xee,
	0xfc, 0xfd, 0x9c, 0xa3, 0xef, 0x7c, 0x32, 0xe0, 0xce, 0x90, 0xbe, 0x30, 0xa4, 0x6f, 0x55, 0x4e,
	0xb3, 0x1b, 0x5d, 0xd5, 0x15, 0x06, 0x96, 0x4b, 0x1a, 0x6a, 0xf2, 0x05, 0x7a, 0x4c, 0xeb, 0x4a,
	0xe3, 0x3b, 0x00, 0xb2, 0x0f, 0x91, 0x57, 0x05, 0x45, 0xde, 0xd8, 0x9b, 0x8e, 0xe6, 0x4f, 0x66,
	0x7b, 0xd6, 0x99, 0xf3, 0x2d, 0xab, 0x82, 0xb8, 0x4f, 0xed, 0x13, 0x23, 0x18, 0x94, 0x64, 0x8c,
	0xfc, 0x4e, 0xd1, 0xd1, 0xd8, 0x9b, 0xfa, 0xbc, 0x85, 0x93, 0x5f, 0x1e, 0x74, 0x33, 0x43, 0x1a,
	0xcf, 0x60, 0x60, 0xd7, 0x08, 0x55, 0xb8, 0xb5, 0x1d, 0xde, 0xb7, 0x70, 0x55, 0xe0, 0x0b, 0x80,
	0x6f, 0x4a, 0x9b, 0x5a, 0x5c, 0xcb, 0xb2, 0x1d, 0xf7, 0x1d, 0xb3, 0x96, 0x25, 0xe1, 0x39, 0xf8,
	0x5b, 0xd9, 0xaa, 0x1d, 0xa7, 0x0e, 0x2d, 0xe1, 0xc4, 0x47, 0xd0, 0xa3, 0x52, 0xaa, 0x6d, 0xd4,
	0x75, 0x42, 0x03, 0xec, 0x88, 0x32, 0x42, 0xe6, 0xb5, 0xba, 0xa5, 0xa8, 0x37, 0xf6, 0xa6, 0x43,
	0x3e, 0x54, 0x66, 0xe1, 0x30, 0xbe, 0x84, 0xe3, 0x42, 0xd6, 0x24, 0x72, 0x4d, 0xb2, 0xa6, 0x22,
	0xea, 0xbb, 0x30, 0x81, 0xe5, 0x96, 0x0d, 0x35, 0x79, 0x0d, 0xa3, 0x0f, 0x54, 0xdb, 0xd4, 0x9c,
	0x7e, 0xee, 0xc8, 0xd4, 0xf7, 0x86, 0x9f, 0x5c, 0xc1, 0xc9, 0x9d, 0xd5, 0xdc, 0x54, 0xd7, 0x86,
	0xf0, 0x15, 0x74, 0xad, 0xe8, 0x8c, 0xc1, 0xfc, 0xf4, 0xa0, 0x3c, 0x67, 0x74, 0x32, 0x4e, 0xa1,
	0xe7, 0xfa, 0x73, 0x17, 0x07, 0x73, 0xfc, 0xb7, 0x64, 0xde, 0x18, 0xde, 0xfc, 0x00, 0xff, 0xae,
	0x74, 0x7c, 0x08, 0xfe, 0x7a, 0x93, 0x8a, 0xf7, 0x9b, 0x6c, 0x1d, 0x87, 0x0f, 0xf0, 0x04, 0x82,
	0xcb, 0x45, 0x2c, 0x38, 0xfb, 0x94, 0xb1, 0x24, 0x0d, 0x3d, 0x0c, 0xe1, 0x38, 0x61, 0xfc, 0x33,
	0xe3, 0x82, 0x71, 0xbe, 0xe1, 0xe1, 0x11, 0x3e, 0x86, 0x53, 0x3b, 0xb1, 0xc8, 0xd2, 0x8f, 0x6c,
	0x9d, 0xae, 0x96, 0x8b, 0x94, 0xc5, 0x61, 0x07, 0x11, 0x46, 0x2d, 0xbd, 0xe1, 0xab, 0xaf, 0x2c,
	0x0e, 0xbb, 0xf3, 0x04, 0x82, 0xec, 0x6f, 0x0a, 0x8c, 0x61, 0xf0, 0xe7, 0x38, 0x3c, 0x3f, 0x88,
	0x77, 0xd8, 0xce, 0xb3, 0xe7, 0xff, 0x17, 0x9b, 0x3e, 0x2e, 0x9f, 0xc2, 0x59, 0x5e, 0x95, 0x33,
	0x55, 0x5e, 0xc8, 0xdd, 0xb6, 0xd8, 0xb7, 0x5e, 0xf5, 0xdd, 0x57, 0x7c, 0xfb, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x8f, 0x45, 0xd4, 0xbd, 0xa0, 0x02, 0x00, 0x00,
}
